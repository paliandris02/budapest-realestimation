{"version":3,"sources":["ts/InputHelper.ts","ts/config.ts","ts/spinner.ts","ts/index.ts"],"names":[],"mappings":"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","file":"ts.3c49a097.js","sourceRoot":"..\\src","sourcesContent":["import type EstimationRequest from \"./EstimationRequest\";\r\n\r\nconst district = document.getElementById(\"district\") as HTMLSelectElement;\r\nconst area_size = document.getElementById(\"area_size\") as HTMLSelectElement;\r\nconst floors = document.getElementById(\"floors\") as HTMLSelectElement;\r\nconst building_material = document.getElementById(\r\n  \"building_material\"\r\n) as HTMLSelectElement;\r\nconst type_of_heating = document.getElementById(\r\n  \"type_of_heating\"\r\n) as HTMLSelectElement;\r\nconst condition_of_real_estate = document.getElementById(\r\n  \"condition_of_real_estate\"\r\n) as HTMLSelectElement;\r\nconst convenience_level = document.getElementById(\r\n  \"convenience_level\"\r\n) as HTMLSelectElement;\r\nconst year_built = document.getElementById(\"year_built\") as HTMLSelectElement;\r\nconst ground_area_size = document.getElementById(\r\n  \"ground_area_size\"\r\n) as HTMLSelectElement;\r\nconst orientation = document.getElementById(\"orientation\") as HTMLSelectElement;\r\nconst ownership_status = document.getElementById(\r\n  \"ownership_status\"\r\n) as HTMLSelectElement;\r\nconst listing_type = document.getElementById(\r\n  \"listing_type\"\r\n) as HTMLSelectElement;\r\nconst property_type = document.getElementById(\r\n  \"property_type\"\r\n) as HTMLSelectElement;\r\n\r\nexport default function getInputs(): EstimationRequest {\r\n  return {\r\n    district: district.value || \"nan\",\r\n    area_size: Number(area_size?.value),\r\n    floors: floors.value || \"nan\",\r\n    building_material: building_material.value || \"nan\",\r\n    type_of_heating: type_of_heating.value || \"nan\",\r\n    condition_of_real_estate: condition_of_real_estate.value || \"nan\",\r\n    convenience_level: convenience_level.value || \"nan\",\r\n    year_built: year_built.value || \"nan\",\r\n    ground_area_size: Number(ground_area_size.value) || \"nan\",\r\n    orientation: orientation.value || \"nan\",\r\n    ownership_status: ownership_status.value || \"nan\",\r\n    listing_type: \"for-sale\",\r\n    property_type: \"apartment\",\r\n  };\r\n}\r\n","class Config {\r\n  private readonly API_URL = \"https://szitakoto.azurewebsites.net/\";\r\n  private readonly ENDPOINT = \"estimate\";\r\n  // WARNING: LOCALHOST:8080 IS ONLY ADDED TO THIS PATH IN THE CORS CONFIG\r\n  public getUrl(): string {\r\n    return this.API_URL + this.ENDPOINT;\r\n  }\r\n}\r\n\r\nexport default new Config();\r\n","class Spinner {\r\n  private spinner = document.querySelector<HTMLDivElement>(\".spinner\");\r\n  hide() {\r\n    this.spinner?.classList.add(\"hidden\");\r\n  }\r\n  show() {\r\n    this.spinner?.classList.remove(\"hidden\");\r\n  }\r\n}\r\n\r\nexport default new Spinner();\r\n","import type EstimationRequest from \"./EstimationRequest\";\nimport getInputs from \"./InputHelper\";\nimport Config from \"./config\";\nimport spinner from \"./spinner\";\n\nconst resultEl = document.querySelector<HTMLDivElement>(\".result\");\nconst form = document.querySelector<HTMLFormElement>(\".main-form\");\nspinner.hide();\n\nform?.addEventListener(\"submit\", async (e) => {\n  e.preventDefault();\n\n  spinner.show();\n\n  const requestResult = await sendRequest();\n\n  if (!requestResult?.ok) {\n    const errMsg = `Request failed: ${requestResult?.status} ${requestResult?.statusText}`;\n    console.error(errMsg);\n    spinner.hide();\n    if (resultEl) {\n      resultEl.textContent = errMsg;\n    }\n    return;\n  }\n\n  spinner.hide();\n\n  const data: Promise<Object> = await requestResult?.json();\n\n  if (resultEl) {\n    resultEl.textContent = data.toString();\n  }\n});\n\nasync function sendRequest() {\n  try {\n    const requestBody: EstimationRequest = getInputs();\n\n    const res = await fetch(Config.getUrl(), {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(requestBody),\n    });\n\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"]}